/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <VectorKit/VKScreenCanvas.h>

#import "AltMapDelegate-Protocol.h"
#import "AltRendererCallback-Protocol.h"
#import "VKAnnotationModelDelegate-Protocol.h"
#import "VKCalloutControllerDelegate-Protocol.h"
#import "VKCameraControllerCanvasDelegate-Protocol.h"
#import "VKGlobeAdapterDelegate-Protocol.h"
#import "VKInteractiveMap-Protocol.h"
#import "VKTrafficIncidentsMapModelDelegate-Protocol.h"
#import "VKWorldDelegate-Protocol.h"

@class AltMapView, GEOMapRegion, NSArray, NSObject<OS_dispatch_queue>, NSSet, UIView, VKAnchorContext, VKAnnotationModel, VKCalloutController, VKCamera, VKGlobeAdapter, VKGlobeCameraController, VKGlobeLineContainer, VKGlobePointCache, VKGlobeViewWrapperImp, VKTrafficIncident, VKViewTransform, VKWorld;

@interface VKClassicGlobeCanvas : VKScreenCanvas <AltMapDelegate, AltRendererCallback, VKAnnotationModelDelegate, VKCameraControllerCanvasDelegate, VKCalloutControllerDelegate, VKGlobeAdapterDelegate, VKWorldDelegate, VKTrafficIncidentsMapModelDelegate, VKInteractiveMap>
{
    AltMapView *_globeView;
    id <VKInteractiveMapDelegate> _delegate;
    VKCalloutController *_calloutController;
    VKGlobeCameraController *_cameraController;
    VKAnnotationModel *_annotationModel;
    VKAnchorContext *_anchorContext;
    VKGlobePointCache *_pointCache;
    VKViewTransform *_viewTransform;
    VKCamera *_geocentricCamera;
    BOOL _labelMarkerSelectionEnabled;
    BOOL _localizeLabels;
    int _labelScaleFactor;
    int _mapType;
    VKGlobeAdapter *_globeAdapter;
    VKGlobeViewWrapperImp *_wrapper;
    VKGlobeLineContainer *_lineContainer;
    NSObject<OS_dispatch_queue> *_rootLayoutQueue;
    NSObject<OS_dispatch_queue> *_layoutQueue;
    BOOL _tracking;
    BOOL _forceRepaint;
    BOOL _searchAnimationEnabled;
    struct UIEdgeInsets _edgeInsets;
    struct UIEdgeInsets _fullyOccludedEdgeInsets;
    struct shared_ptr<VKGlobeStylesheet> _globeStyleSheet;
    struct AltitudeDebugSettings _debugSettings;
    BOOL _pendingAnimation;
    CDStruct_2c43369c _animationCoordinate;
    double _animationZoom;
    BOOL _initialized;
    VKWorld *_world;
    BOOL _worldNeedsLayout;
    BOOL _worldNeedsDisplay;
    BOOL _canShowFlyover;
    struct shared_ptr<bool> _isDead;
}

+ (BOOL)supportsMapType:(int)arg1;
@property(readonly, nonatomic) BOOL flyoverAvailable; // @synthesize flyoverAvailable=_canShowFlyover;
@property(nonatomic) BOOL forceRepaint; // @synthesize forceRepaint=_forceRepaint;
@property(retain, nonatomic) VKCalloutController *calloutController; // @synthesize calloutController=_calloutController;
@property(nonatomic) id <VKInteractiveMapDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) int labelScaleFactor; // @synthesize labelScaleFactor=_labelScaleFactor;
@property(nonatomic) BOOL localizeLabels; // @synthesize localizeLabels=_localizeLabels;
@property(nonatomic) BOOL labelMarkerSelectionEnabled; // @synthesize labelMarkerSelectionEnabled=_labelMarkerSelectionEnabled;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)incidentsModel:(id)arg1 didDeselectTrafficIncident:(id)arg2;
- (void)incidentsModel:(id)arg1 trafficIncident:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (void)incidentsModel:(id)arg1 willSelectTrafficIncident:(id)arg2;
@property(readonly, nonatomic) VKTrafficIncident *selectedTrafficIncident;
- (void)deselectTrafficIncidentAnimated:(BOOL)arg1;
- (void)selectTrafficIncident:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect)arg3;
- (id)trafficIncidentForSelectionAtPoint:(struct CGPoint)arg1;
- (void)worldDisplayDidChange:(id)arg1;
- (void)worldLayoutDidChange:(id)arg1;
- (void)forceLayout;
- (void)waitForFirstFrame;
- (void)_updateDebugSettings;
- (void)setBackgroundViewLoading:(BOOL)arg1;
- (unsigned int)getTotalDownloaded;
@property(nonatomic) BOOL alwaysDraws;
@property(readonly, nonatomic, getter=isFullyDrawn) BOOL fullyDrawn;
- (void)setLaunchCompletion:(id)arg1;
- (void)didEnterBackground;
- (void)didReceiveMemoryWarning;
- (void)removePersistentOverlay:(id)arg1;
- (void)addPersistentOverlay:(id)arg1;
@property(readonly, nonatomic) NSSet *persistentOverlays;
@property(readonly, nonatomic) NSArray *overlays;
- (void)removeOverlay:(id)arg1;
- (void)addOverlay:(id)arg1;
- (id)cameraController:(id)arg1 presentationForAnnotation:(id)arg2;
- (void)cameraController:(id)arg1 canEnter3DModeDidChange:(BOOL)arg2;
- (void)cameraController:(id)arg1 didBecomePitched:(BOOL)arg2;
- (void)cameraControllerDidStopRegionAnimation:(id)arg1 completed:(BOOL)arg2;
- (void)cameraControllerWillStartRegionAnimation:(id)arg1;
- (void)cameraControllerDidChangeCameraState:(id)arg1;
- (CDStruct_31142d93)pointForHandle:(id)arg1 atCoordinate:(CDStruct_c3b9c2ee)arg2 withHighPrecision:(BOOL)arg3;
- (void)removeHandle:(id)arg1;
- (id)addHandleAtCoordinate:(CDStruct_c3b9c2ee)arg1 withHighPrecision:(BOOL)arg2;
- (id)annotationMarkerDeselectionCallback;
- (id)selectedAnnotationMarker;
- (id)annotationMarkers;
- (id)annotationCoordinateTest;
- (id)annotationRectTest;
- (void)setAnnotationMarkerDeselectionCallback:(id)arg1;
- (void)selectAnnotationMarker:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect)arg3;
- (void)deselectAnnotationMarker:(id)arg1 animated:(BOOL)arg2;
- (void)removeAnnotationMarker:(id)arg1;
- (void)addAnnotationMarker:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)globeAdapter:(id)arg1 setNeedsDisplay:(BOOL)arg2;
- (void)globeAdapter:(id)arg1 setNeedsLayout:(BOOL)arg2;
- (void)globeAdapter:(id)arg1 didDeselectLabelMarker:(id)arg2;
- (void)globeAdapter:(id)arg1 labelMarker:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (void)globeAdapter:(id)arg1 willSelectLabelMarker:(id)arg2;
- (void)calloutController:(id)arg1 didUpdateCalloutView:(id)arg2 forSource:(id)arg3 animated:(BOOL)arg4;
- (void)calloutController:(id)arg1 willShowCalloutView:(id)arg2 forSource:(id)arg3;
- (void)calloutController:(id)arg1 didUpdateCalloutPopoverController:(id)arg2 forSource:(id)arg3;
- (void)calloutController:(id)arg1 willShowCalloutPopoverController:(id)arg2 forSource:(id)arg3;
- (void)calloutController:(id)arg1 needsPanByPixelOffset:(struct CGPoint)arg2 relativeToScreenPoint:(struct CGPoint)arg3 animated:(BOOL)arg4 duration:(double)arg5 completionHandler:(id)arg6;
- (void)annotationModel:(id)arg1 didAnimateInAnnotationMarkers:(id)arg2;
- (void)annotationModel:(id)arg1 willAnimateInAnnotationMarkers:(id)arg2;
- (void)annotationModel:(id)arg1 annotationMarker:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (void)deselectLabelMarkerAnimated:(BOOL)arg1;
- (id)selectedLabelMarker;
- (void)selectLabelMarker:(id)arg1 animated:(BOOL)arg2 avoid:(struct CGRect)arg3;
- (id)labelMarkerForSelectionAtPoint:(struct CGPoint)arg1 pointLabelsOnly:(BOOL)arg2;
- (id)annotationMarkerForSelectionAtPoint:(struct CGPoint)arg1 avoidCurrent:(BOOL)arg2;
- (void)mapView:(id)arg1 canShowFlyoverDidChange:(BOOL)arg2;
- (void)mapViewDidFinishLoadingTiles:(id)arg1;
- (void)mapViewDidStartLoadingTiles:(id)arg1;
- (void)mapView:(id)arg1 canEnter3DModeDidChange:(BOOL)arg2;
- (void)mapView:(id)arg1 didBecomePitched:(BOOL)arg2;
- (void)mapViewDidChangeVisibleRegion:(id)arg1;
- (void)mapViewDidStopUserInteraction:(id)arg1;
- (void)mapViewDidStartUserInteraction:(id)arg1;
- (BOOL)isShowingNoDataPlaceholders;
- (id)attributionsForCurrentRegion;
@property(readonly, nonatomic) NSArray *visibleTileSets;
- (CDStruct_31142d93)centerCoordinate;
- (void)debugHighlightLabelAtPoint:(struct CGPoint)arg1;
- (CDStruct_31142d93)screenPointForPoint:(struct CGPoint)arg1;
- (void)postRender;
- (void)drawVK;
- (void)layoutVK;
- (void)preRender;
- (void)onTimerFired:(double)arg1;
- (BOOL)canRenderInWindow:(id)arg1;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toCameraModelPointToView:(id)arg2;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToView:(id)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (void)stopAnimations;
- (void)stopSearchResultAnimation;
- (void)stopPlaceCardAnimationAtCoordinate;
- (void)startPlaceCardAnimationAtCoordinate:(CDStruct_c3b9c2ee)arg1 andDistance:(double)arg2;
- (void)showSearchResultAnimationAtCoordinate:(CDStruct_c3b9c2ee)arg1 withMapRegion:(id)arg2;
- (void)_runPendingAnimation;
- (void)_setAnimationCoordinate:(CDStruct_c3b9c2ee)arg1 andZoom:(double)arg2;
- (BOOL)canShowAnimationForSearchResultWithMapRegion:(id)arg1;
- (void)startLoadPosition:(CDStruct_c3b9c2ee)arg1 withCompletion:(id)arg2;
- (void)reload;
- (void)setLodMode:(int)arg1;
@property(nonatomic) id <VKRouteMatchedAnnotationPresentation> routeLineSplitAnnotation;
@property(readonly, nonatomic, getter=isTrackingHeading) BOOL trackingHeading;
@property(readonly, nonatomic) id <VKTrackableAnnotation> trackingAnnotation;
@property(readonly, nonatomic, getter=isAnimatingToTrackAnnotation) BOOL animatingToTrackAnnotation;
- (void)stopTrackingAnnotation;
- (void)startTrackingAnnotation:(id)arg1 trackHeading:(BOOL)arg2 animated:(BOOL)arg3;
@property(nonatomic) BOOL trackingAutoSelectsZoomScale;
- (BOOL)restoreViewportFromInfo:(id)arg1;
- (id)viewportInfo;
@property(nonatomic) BOOL staysCenteredDuringRotation;
@property(nonatomic) BOOL staysCenteredDuringPinch;
- (id)camera;
- (void)updateCameraFromGlobe;
@property(readonly, nonatomic) double pitch;
@property(readonly, nonatomic) double presentationYaw;
@property(readonly, nonatomic) double yaw;
@property(readonly, nonatomic) GEOMapRegion *mapRegionOfInterest;
@property(retain, nonatomic) GEOMapRegion *mapRegion;
- (void)setYaw:(double)arg1 animated:(BOOL)arg2;
- (double)_zoomForMapRegion:(id)arg1;
- (void)animateToMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(id)arg5;
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(BOOL)arg4 completion:(id)arg5;
- (void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(BOOL)arg4;
- (void)setMapRegion:(id)arg1 animated:(BOOL)arg2;
- (void)transferCamera:(id)arg1;
- (void)dismissExpandedCallout;
@property(nonatomic) UIView *calloutContainerView;
@property(nonatomic) Class calloutViewClass;
- (void)stopSnappingAnimations;
- (BOOL)canEnter3DMode;
@property(readonly, nonatomic, getter=isFullyPitched) BOOL fullyPitched;
@property(readonly, nonatomic, getter=isPitched) BOOL pitched;
- (void)exit3DMode;
- (void)enter3DMode;
- (id)detailedDescription;
- (void)_activeTileGroupChanged:(id)arg1;
- (void)dealloc;
- (void)initialize;
- (id)initWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (void)setHidden:(BOOL)arg1;
@property(readonly, nonatomic) double maximumZoomLevel;
@property(readonly, nonatomic) double minimumZoomLevel;
@property(nonatomic) int mapType;
@property(nonatomic) struct UIEdgeInsets fullyOccludedEdgeInsets;
@property(nonatomic) struct UIEdgeInsets edgeInsets;
@property(nonatomic, getter=isSearchAnimationEnabled) BOOL searchAnimationEnabled;
@property(nonatomic) BOOL trafficEnabled;
@property(nonatomic) BOOL isPitchable;
- (void)stopPitchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePitchWithFocusPoint:(struct CGPoint)arg1 translation:(double)arg2;
- (void)startPitchingWithFocusPoint:(struct CGPoint)arg1;
- (void)stopRotatingWithFocusPoint:(struct CGPoint)arg1;
- (void)updateRotationWithFocusPoint:(struct CGPoint)arg1 newValue:(double)arg2;
- (void)startRotatingWithFocusPoint:(struct CGPoint)arg1;
- (void)stopPanningAtPoint:(struct CGPoint)arg1;
- (void)updatePanWithTranslation:(struct CGPoint)arg1;
- (void)startPanningAtPoint:(struct CGPoint)arg1;
- (void)stopPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePinchWithFocusPoint:(struct CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;
- (void)startPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)zoom:(double)arg1 withFocusPoint:(struct CGPoint)arg2 completionHandler:(id)arg3;

@end

