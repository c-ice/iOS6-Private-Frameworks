/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <VectorKit/VGLScreenCanvas.h>

#import "VKCameraControllerCanvasDelegate-Protocol.h"
#import "VKCameraDelegate-Protocol.h"
#import "VKWorldDelegate-Protocol.h"

@class NSArray, NSMutableArray, VKCamera, VKLayoutContext, VKScene, VKWorld;

@interface VKScreenCanvas : VGLScreenCanvas <VKCameraDelegate, VKWorldDelegate, VKCameraControllerCanvasDelegate>
{
    VKWorld *_world;
    VKCamera *_camera;
    VKScene *_scene;
    VKLayoutContext *_layoutContext;
    BOOL _needsLayout;
    unsigned int _wantsLayout;
    unsigned int _needsRepaint;
    BOOL _userIsGesturing;
    NSMutableArray *_cameraControllers;
    BOOL _debugPaintFrameRateGraph;
    float _debugFramesPerSecond;
    int _state;
    BOOL _rendersInBackground;
}

+ (Class)contextClass;
@property(readonly, nonatomic) NSArray *cameraControllers; // @synthesize cameraControllers=_cameraControllers;
@property(readonly, nonatomic) int state; // @synthesize state=_state;
@property(readonly, nonatomic) VKCamera *camera; // @synthesize camera=_camera;
@property(nonatomic) float debugFramesPerSecond; // @synthesize debugFramesPerSecond=_debugFramesPerSecond;
@property(nonatomic) BOOL debugPaintFrameRateGraph; // @synthesize debugPaintFrameRateGraph=_debugPaintFrameRateGraph;
@property(readonly, nonatomic) VKWorld *world; // @synthesize world=_world;
@property(nonatomic) BOOL rendersInBackground;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (id)cameraController:(id)arg1 presentationForAnnotation:(id)arg2;
- (void)cameraController:(id)arg1 canEnter3DModeDidChange:(BOOL)arg2;
- (void)cameraController:(id)arg1 didBecomePitched:(BOOL)arg2;
- (void)cameraControllerDidStopRegionAnimation:(id)arg1 completed:(BOOL)arg2;
- (void)cameraControllerWillStartRegionAnimation:(id)arg1;
- (void)cameraControllerDidChangeCameraState:(id)arg1;
- (void)removeCameraController:(id)arg1;
- (void)addCameraController:(id)arg1;
@property(nonatomic, getter=isGesturing) BOOL gesturing;
- (void)cameraDidChange:(id)arg1;
- (void)worldDisplayDidChange:(id)arg1;
- (void)worldLayoutDidChange:(id)arg1;
- (void)forceLayout;
- (void)layoutSubviews;
- (void)updateCameraForFrameResize;
- (void)didDrawView;
- (void)onTimerFired:(double)arg1;
@property(nonatomic) BOOL debugEnableMultisampling; // @dynamic debugEnableMultisampling;
- (void)setNeedsDisplay;
- (void)setNeedsLayout;
- (void)setHidden:(BOOL)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
- (BOOL)_updateDisplayStatus:(id)arg1;
- (BOOL)canRenderInWindow:(id)arg1;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

