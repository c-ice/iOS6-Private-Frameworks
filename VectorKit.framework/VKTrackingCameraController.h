/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import <VectorKit/VKCameraController.h>

#import "UIGestureRecognizerDelegate-Protocol.h"

@class VKAnimation, VKMapModel, VKRunningCurve;

@interface VKTrackingCameraController : VKCameraController <UIGestureRecognizerDelegate>
{
    id <VKTrackingCameraControllerDelegate> _delegate;
    int _viewStyle;
    int _focusStyle;
    VKAnimation *_animation;
    double _verticalGroundspanInFrontOfReference;
    CDStruct_31142d93 _farthestPoi;
    VKRunningCurve *_cameraPositionCurve;
    VKRunningCurve *_cameraLookAtCurve;
    VKRunningCurve *_cameraRightCurve;
    CDStruct_9a8617ed _puckPosition;
    CDStruct_31142d93 _puckTargetPosition;
    double _startZoomScale;
    double _endZoomScale;
    double _zoomScale;
    double _startPinchScale;
    VKMapModel *_mapModel;
    double _startTime;
    BOOL _animatingIn;
    double _startPitch;
    double _startCourse;
    double _startDistance;
    CDStruct_31142d93 _startPuckScreenPosition;
    id _completionHandler;
    double _puckOffset;
    double _puckBottom;
    CDStruct_31142d93 _previousReference;
    CDStruct_31142d93 _previousFocus;
    struct VKCircularBuffer<double> *_rotationRateBuffer;
    double _previousStepTime;
    VKAnimation *_tapZoomAnimation;
    double _tracePlaybackSpeedMultiplier;
    BOOL _receivedFirstUpdate;
    BOOL _puckAnimatorRunning;
    double _cruisePhi;
    double _cruiseHeight;
    double _cruisePhiOverride;
    double _cruiseHeightOverride;
    CDStruct_da177989 _lastUpdate;
    BOOL _shouldLimitTopDownHeight;
    struct UIEdgeInsets _insets;
}

@property(nonatomic) BOOL shouldLimitTopDownHeight; // @synthesize shouldLimitTopDownHeight=_shouldLimitTopDownHeight;
@property(nonatomic) double tracePlaybackSpeedMultiplier; // @synthesize tracePlaybackSpeedMultiplier=_tracePlaybackSpeedMultiplier;
@property(retain, nonatomic) VKMapModel *mapModel; // @synthesize mapModel=_mapModel;
@property(nonatomic) id <VKTrackingCameraControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void)canvasFrameDidChange;
- (id)detailedDescription;
- (void)stopPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)updatePinchWithFocusPoint:(struct CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3;
- (void)startPinchingWithFocusPoint:(struct CGPoint)arg1;
- (void)zoom:(double)arg1 relativeToPoint:(struct CGPoint)arg2 completionHandler:(id)arg3;
- (void)_startTapZoomAnimationFrom:(double)arg1 to:(double)arg2 completionHandler:(id)arg3;
- (void)setGesturing:(BOOL)arg1;
- (void)_resumeAnimationIfNecessary;
@property(nonatomic) double zoomScale;
- (BOOL)isAtDefaultZoomScale;
- (void)_updateCruiseHeightAndPhi;
- (void)_boundPuck:(const CDStruct_31142d93 *)arg1 cameraPosition:(CDStruct_31142d93 *)arg2 cameraOrientation:(CDStruct_aa5aacbc *)arg3;
- (void)_updateCameraForStartAnimation:(double)arg1 position:(CDStruct_31142d93)arg2 orientation:(const CDStruct_aa5aacbc *)arg3;
- (void)_step;
- (CDStruct_0038f5ee)_getTargetStateTopDownForReference:(CDStruct_31142d93)arg1 focus:(CDStruct_31142d93)arg2 puckVerticalOffsetFromBottom:(double)arg3;
- (CDStruct_0038f5ee)_getTargetStateRooftopForReference:(CDStruct_31142d93)arg1 focus:(CDStruct_31142d93)arg2;
- (void)_updateVerticalGroundspanForFocusStyle:(int)arg1 viewStyle:(int)arg2 reference:(CDStruct_31142d93)arg3 pois:(id)arg4;
- (void)puckAnimator:(id)arg1 updatedTargetPosition:(CDStruct_31142d93)arg2;
- (void)puckAnimatorDidStop:(id)arg1;
- (void)puckAnimator:(id)arg1 updatedPosition:(CDStruct_9a8617ed *)arg2;
- (void)setCameraViewForPointOfReference:(CDStruct_c3b9c2ee)arg1 referenceHeading:(double)arg2 pointOfFocus:(CDStruct_c3b9c2ee)arg3 pointsOfInterest:(id)arg4 style:(int)arg5 focusStyle:(int)arg6 animated:(BOOL)arg7;
- (void)_applyUpdateIfNecessary:(CDStruct_da177989)arg1;
- (void)endAnimating;
- (void)beginAnimating;
- (void)dealloc;
- (void)startWithPounce:(BOOL)arg1 pounceCompletionHandler:(id)arg2;
- (void)setEdgeInsets:(struct UIEdgeInsets)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)init;

@end

