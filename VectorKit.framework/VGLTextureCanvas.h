/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "VGLCanvas-Protocol.h"

@class VGLContext, VGLTexture;

@interface VGLTextureCanvas : NSObject <VGLCanvas>
{
    VGLContext *_targetContext;
    VGLTexture *_targetTexture;
    struct CGSize _size;
    struct CGSize _sizeInPixels;
    float _contentScale;
    struct _VGLColor _glClearColor;
    unsigned int _framebuffer;
    unsigned int _depthbuffer;
}

+ (Class)contextClass;
@property(retain, nonatomic) VGLTexture *targetTexture; // @synthesize targetTexture=_targetTexture;
@property(readonly, nonatomic) struct CGSize sizeInPixels; // @synthesize sizeInPixels=_sizeInPixels;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
@property(readonly, nonatomic) float contentScale; // @synthesize contentScale=_contentScale;
@property(nonatomic) struct _VGLColor glClearColor; // @synthesize glClearColor=_glClearColor;
@property(readonly, nonatomic) VGLContext *vglContext; // @synthesize vglContext=_targetContext;
- (void)didDrawView;
- (void)willDrawView;
- (void)setRasterizedContext:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1 scale:(float)arg2;

@end

