/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "VKTileSourceClient-Protocol.h"

@class GEOTileKeyList, NSArray, NSMutableSet, NSSet, NSTimer, VKMapRasterizer, VKStylesheet, VKTileCache, VKTileKeyList, VKTileSelection, VKTileSource, _VKTileProviderTimerTarget;

@interface VKTileProvider : NSObject <VKTileSourceClient>
{
    id <VKTileProviderClient> _client;
    int _mode;
    VKTileSelection *_tileSelection;
    VKTileKeyList *_keysInView;
    NSTimer *_evaluationTimer;
    NSMutableSet *_tilesToRender;
    NSArray *_holes;
    NSMutableSet *_lostTiles;
    BOOL _fallbackEnabled;
    VKTileCache *_tilePool;
    VKTileSource *_tilesSources[26];
    VKTileSource *_optionalTileSources[26];
    VKStylesheet *_stylesheet;
    float _loadingProgress;
    struct VKCameraState _lastCameraState;
    struct CGSize _lastCanvasSize;
    BOOL _tilesChanged;
    VKMapRasterizer *_rasterizer;
    id <VKMapLayer> _debugLayer;
    GEOTileKeyList *_debugLayerKeys;
    NSMutableSet *_geoTileSources;
    int _tileReserveLimit;
    int _tileMaximumLimit;
    BOOL _useSmallTileCache;
    _VKTileProviderTimerTarget *_timerTarget;
}

@property(nonatomic, getter=isFallbackEnabled) BOOL fallbackEnabled; // @synthesize fallbackEnabled=_fallbackEnabled;
@property(readonly, nonatomic) GEOTileKeyList *debugLayerKeys; // @synthesize debugLayerKeys=_debugLayerKeys;
@property(retain, nonatomic) id <VKMapLayer> debugLayer; // @synthesize debugLayer=_debugLayer;
@property(nonatomic) BOOL useSmallTileCache; // @synthesize useSmallTileCache=_useSmallTileCache;
@property(readonly, nonatomic) float loadingProgress; // @synthesize loadingProgress=_loadingProgress;
@property(retain, nonatomic) VKStylesheet *stylesheet; // @synthesize stylesheet=_stylesheet;
@property(readonly, nonatomic) NSSet *tilesToRender; // @synthesize tilesToRender=_tilesToRender;
@property(readonly, nonatomic) VKTileKeyList *keysInView; // @synthesize keysInView=_keysInView;
@property(nonatomic) int mode; // @synthesize mode=_mode;
@property(nonatomic) id <VKTileProviderClient> client; // @synthesize client=_client;
- (void)didStopLoadingTilesWithError:(id)arg1;
- (void)willStartLoadingTiles;
- (BOOL)tileSource:(id)arg1 keyIsNeeded:(const struct VKTileKey *)arg2;
- (void)invalidateTilesFromTileSource:(id)arg1;
- (void)tileSource:(id)arg1 invalidateTilesWithState:(unsigned int)arg2;
- (void)tileSource:(id)arg1 invalidateKeys:(id)arg2;
- (void)tileSource:(id)arg1 invalidateKey:(const struct VKTileKey *)arg2;
- (void)tileSource:(id)arg1 didFailToLoadTileForKey:(const struct VKTileKey *)arg2 error:(id)arg3;
- (void)tileSource:(id)arg1 didFailToDecodeTileForKey:(const struct VKTileKey *)arg2;
- (void)tileSource:(id)arg1 didFetchTile:(id)arg2 forKey:(const struct VKTileKey *)arg3;
- (BOOL)tileSourceMayUseNetwork:(id)arg1;
- (void)updateWithContext:(id)arg1;
- (void)_pushEvaluationTimer;
- (void)_ensureEvaluationTimer;
- (id)selectTiles:(int *)arg1 needRasterization:(char *)arg2;
- (void)_fillHoles:(id)arg1 context:(id)arg2;
- (void)releaseChildrenFallbackTilesForTile:(id)arg1 context:(id)arg2;
- (BOOL)releaseParentFallbackTileForTile:(id)arg1;
- (void)timerFired:(id)arg1;
- (void)_fetchAvailableTiles:(BOOL)arg1;
- (void)configureTileSelection;
- (unsigned int)layerForSource:(id)arg1;
- (id)sourceForLayer:(id)arg1;
- (void)removeTileSourceForMapLayer:(unsigned int)arg1;
- (void)setTileSource:(id)arg1 forMapLayer:(unsigned int)arg2 optional:(BOOL)arg3;
- (void)tileSourcesDidChange;
- (BOOL)evaluateSelectedTileForRendering:(id)arg1;
- (void)changeTileForKey:(const struct VKTileKey *)arg1 toState:(unsigned int)arg2 withMetadata:(id)arg3 withTile:(id)arg4 forLayer:(unsigned int)arg5;
- (void)releaseFallbackTileForRendering:(id)arg1;
- (BOOL)canRenderTile:(id)arg1;
- (BOOL)hasRequiredTileData:(id)arg1;
- (void)releaseTileForRendering:(id)arg1;
- (void)prepareTileForRendering:(id)arg1;
- (void)retireTiles:(id)arg1;
- (void)retireTile:(id)arg1;
- (id)tileForKey:(const struct VKTileKey *)arg1;
- (void)foreachActiveLayer:(id)arg1;
- (void)foreachOptionalLayer:(id)arg1;
- (id)detailedDescription;
- (void)flushCaches;
- (void)clearScene;
- (void)rasterizer:(id)arg1 didMakeRasterTile:(id)arg2 forKey:(const struct VKTileKey *)arg3;
- (void)requireRasterization:(id)arg1;
- (void)dealloc;
- (void)quiesce;
- (id)initWithClient:(id)arg1;
@property(readonly, nonatomic) NSArray *visibleTileSets;

@end

