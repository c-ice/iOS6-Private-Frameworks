/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "MRLoadable-Protocol.h"
#import "MRRenderable-Protocol.h"

@class MCSlide, MRAudioPlayer, MRFrame, MRImage, MRLayer, MRLayerEffect, NSConditionLock, NSDictionary, NSInvocationOperation, NSLock, NSString;

@interface MRSlideProvider : NSObject <MRLoadable, MRRenderable>
{
    struct CGSize mDefaultSize;
    float mStillTime;
    NSString *mImageSizeScript;
    NSDictionary *mEffectAttributes;
    NSString *mShowTimeScript;
    NSInvocationOperation *mPreloadOperation;
    NSLock *mPreloadOperationLock;
    NSConditionLock *mPreloadSemaphore;
    MRFrame *mFrame;
    MRImage *mOriginalImage;
    MRImage *mOutputImage;
    struct CGSize mRequestedSize;
    double mShowTime;
    double mShowDuration;
    double mSlideStartTime;
    double mSlideDuration;
    MRLayerEffect *mEffectLayer;
    MCSlide *mSlide;
    int mKenBurnsType;
    NSString *mAssetPath;
    float mOriginalImageAspectRatio;
    MRLayer *mSlideLayer;
    struct CGSize mImageSize;
    struct CGSize mLastImageSize;
    double mLastTime;
    struct CGSize mLastDaSize;
    struct CGSize mSizeFactor;
    BOOL mIsAnimatedGIF;
    MCSlide *mSlideCopy;
    unsigned int mSlideIndex;
    MRAudioPlayer *mFakeAudioPlayer;
    unsigned int mFlags;
}

+ (void)applyKenBurnsForSlide:(id)arg1 inPlug:(id)arg2 forSize:(struct CGSize)arg3 atTime:(double)arg4 withTargetSize:(struct CGSize)arg5 kenBurnsType:(int)arg6 translation:(struct CGPoint *)arg7 scale:(float *)arg8 rotation:(float *)arg9;
@property(readonly, nonatomic) double slideDuration; // @synthesize slideDuration=mSlideDuration;
@property(readonly, nonatomic) double slideStartTime; // @synthesize slideStartTime=mSlideStartTime;
@property(readonly) MRFrame *frame; // @synthesize frame=mFrame;
@property int kenBurnsType; // @synthesize kenBurnsType=mKenBurnsType;
@property(retain, nonatomic) MCSlide *slide; // @synthesize slide=mSlide;
@property(nonatomic) struct CGSize sizeFactor; // @synthesize sizeFactor=mSizeFactor;
@property(readonly, nonatomic) struct CGSize requestedSize; // @synthesize requestedSize=mRequestedSize;
@property(nonatomic) double showDuration; // @synthesize showDuration=mShowDuration;
@property(nonatomic) double showTime; // @synthesize showTime=mShowTime;
@property(copy, nonatomic) NSString *showTimeScript; // @synthesize showTimeScript=mShowTimeScript;
@property(retain, nonatomic) NSDictionary *effectAttributes; // @synthesize effectAttributes=mEffectAttributes;
@property(copy, nonatomic) NSString *imageSizeScript; // @synthesize imageSizeScript=mImageSizeScript;
@property(nonatomic) float stillTime; // @synthesize stillTime=mStillTime;
@property(nonatomic) struct CGSize defaultSize; // @synthesize defaultSize=mDefaultSize;
- (id)patchworkAtTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3;
- (id)retainedByUserRenderedImageAtTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3;
- (void)renderAtTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3;
- (BOOL)prerenderForTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3;
- (BOOL)updateStuffWithAssetManager:(id)arg1;
- (void)_computeImageSizeInContext:(id)arg1 withArguments:(id)arg2;
@property(readonly, nonatomic) BOOL isInfinite;
@property(readonly, nonatomic) BOOL isAlphaFriendly;
@property(readonly, nonatomic) BOOL isOpaque;
@property(readonly, nonatomic) BOOL isNative3D;
- (void)cancelLoading;
- (void)unload;
- (void)loadTextureWithArguments:(id)arg1;
- (void)_loadTextureWithArguments:(id)arg1;
- (void)loadWithArguments:(id)arg1;
- (void)loadForTime:(double)arg1 inContext:(id)arg2 withArguments:(id)arg3 now:(BOOL)arg4;
- (BOOL)isLoadedForTime:(double)arg1;
- (void)_unloadIfNotUpdatingLive;
- (BOOL)endLiveUpdate;
- (BOOL)beginLiveUpdate;
@property(nonatomic) double time;
@property(nonatomic) BOOL isPlaying;
- (void)updateShowTimeAndDurationWithPlug:(id)arg1 andAttributes:(id)arg2;
- (struct CGSize)unframedImageSizeForAspectRatio:(float)arg1 frameID:(id)arg2 andFrameAttributes:(id)arg3 atIndex:(unsigned long)arg4 framedImageSize:(struct CGSize *)arg5;
- (struct CGSize)framedImageSizeAtIndex:(unsigned long)arg1 aspectRatio:(float)arg2;
@property(readonly) BOOL hasFilters;
@property(nonatomic) BOOL needsToUpdateLayout;
@property(readonly, nonatomic) BOOL isLoaded;
@property(readonly) BOOL canPlay;
@property(nonatomic) BOOL slideIsReadonly;
@property(nonatomic) BOOL isStill;
@property(nonatomic) BOOL useMipmapping;
@property(nonatomic) BOOL isMonochromatic;
@property(readonly, nonatomic) float imageAspectRatio;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)cleanup;
- (void)finalize;
- (void)dealloc;
- (id)initWithEffectLayer:(id)arg1;
- (void)printFlags;

@end

