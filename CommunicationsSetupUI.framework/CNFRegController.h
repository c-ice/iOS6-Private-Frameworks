/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "NSObject.h"

#import "IMSystemMonitorListener-Protocol.h"

@class FTCConnectionHandler, IMAccount, IMServiceImpl, NSArray, NSDictionary, NSMutableDictionary, NSSet, NSString, NSTimer;

@interface CNFRegController : NSObject <IMSystemMonitorListener>
{
    NSArray *_services;
    NSArray *_accounts;
    NSMutableDictionary *_accountFilterCache;
    id _accountRegistrationBlock;
    id _callerIdChangedBlock;
    id _accountAddedBlock;
    id _accountRemovedBlock;
    id _aliasStatusChangedBlock;
    id _aliasRemovedBlock;
    id _aliasAddedBlock;
    id _vettedAliasesChangedBlock;
    id _profileChangedBlock;
    id _profileStatusChangedBlock;
    id _accountAuthorizationChangedBlock;
    id _accountActivationChangedBlock;
    id _willLaunchURLBlock;
    id _resetBlock;
    id _serviceDidBecomeUnsupportedBlock;
    int _serviceType;
    FTCConnectionHandler *_connectionHandler;
    id _alertHandler;
    NSTimer *_wifiAlertWatchTimer;
    int _requiredWifiCount;
    unsigned char _originalWifiFlag;
    unsigned char _originalCellFlag;
    BOOL _originalUsesBackgroundNetwork;
    NSDictionary *_cachedCallerIDMap;
    NSString *_logName;
    unsigned int _logIndent;
    int _systemAccountType;
    IMAccount *_systemAccount;
    struct {
        unsigned int listeningForAccountChanges:1;
        unsigned int listeningForCallerIDChanges:1;
        unsigned int listeningForAccountActivation:1;
        unsigned int preventingIdleSleep:1;
        unsigned int expectingWiFiPicker:1;
        unsigned int showedWifiFirstRunAlert:1;
        unsigned int ignoringAccountChanges:1;
        unsigned int activatingAccounts:1;
    } _controllerFlags;
}

+ (id)controllerForServiceType:(int)arg1;
@property(readonly, nonatomic) NSDictionary *cachedCallerIDMap; // @synthesize cachedCallerIDMap=_cachedCallerIDMap;
@property(copy, nonatomic) id willLaunchURLBlock; // @synthesize willLaunchURLBlock=_willLaunchURLBlock;
@property(copy, nonatomic) id accountActivationChangedBlock; // @synthesize accountActivationChangedBlock=_accountActivationChangedBlock;
@property(nonatomic) int serviceType; // @synthesize serviceType=_serviceType;
@property(copy, nonatomic) NSArray *services; // @synthesize services=_services;
@property(copy, nonatomic) id accountAuthorizationChangedBlock; // @synthesize accountAuthorizationChangedBlock=_accountAuthorizationChangedBlock;
@property(copy, nonatomic) id profileStatusChangedBlock; // @synthesize profileStatusChangedBlock=_profileStatusChangedBlock;
@property(copy, nonatomic) id profileChangedBlock; // @synthesize profileChangedBlock=_profileChangedBlock;
@property(copy, nonatomic) id alertHandler; // @synthesize alertHandler=_alertHandler;
@property(copy, nonatomic) id serviceDidBecomeUnsupportedBlock; // @synthesize serviceDidBecomeUnsupportedBlock=_serviceDidBecomeUnsupportedBlock;
@property(copy, nonatomic) id resetBlock; // @synthesize resetBlock=_resetBlock;
@property(copy, nonatomic) id vettedAliasesChangedBlock; // @synthesize vettedAliasesChangedBlock=_vettedAliasesChangedBlock;
@property(copy, nonatomic) id aliasRemovedBlock; // @synthesize aliasRemovedBlock=_aliasRemovedBlock;
@property(copy, nonatomic) id aliasAddedBlock; // @synthesize aliasAddedBlock=_aliasAddedBlock;
@property(copy, nonatomic) id aliasStatusChangedBlock; // @synthesize aliasStatusChangedBlock=_aliasStatusChangedBlock;
@property(copy, nonatomic) id callerIdChangedBlock; // @synthesize callerIdChangedBlock=_callerIdChangedBlock;
@property(copy, nonatomic) id accountRemovedBlock; // @synthesize accountRemovedBlock=_accountRemovedBlock;
@property(copy, nonatomic) id accountAddedBlock; // @synthesize accountAddedBlock=_accountAddedBlock;
@property(copy, nonatomic) id accountRegistrationBlock; // @synthesize accountRegistrationBlock=_accountRegistrationBlock;
- (void)_decrementLogIndent;
- (void)_incrementLogIndent;
- (id)_logSpace;
- (id)_logName;
- (BOOL)setDisplayAlias:(id)arg1;
- (id)displayAlias;
- (id)displayAccount;
- (void)_stopListeningForCallerIDChanges;
- (void)_startListeningForCallerIDChanges;
- (void)nukeAllCallerIDSettings;
- (void)_handleCallerIDChanged;
- (void)_handleCallerIDChangedForResume:(id)arg1;
- (void)_nukeCallerIDCache;
- (void)_postCallerIDChanged;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(int)arg2;
- (void)setCellularDataEnabled:(BOOL)arg1 withCompletion:(id)arg2;
- (BOOL)cellularDataEnabled;
- (void)deviceCapabilityChanged:(id)arg1;
- (void)connect;
- (void)connect:(BOOL)arg1;
- (BOOL)isConnected;
@property(readonly, nonatomic, getter=isServiceSupported) BOOL serviceSupported;
@property(nonatomic, getter=isServiceEnabled) BOOL serviceEnabled;
- (void)removeAllHandlers;
- (void)vettedAliasesChanged:(id)arg1;
- (void)aliasesChanged:(id)arg1;
- (void)handleAliasRemoved:(id)arg1;
- (void)handleAliasAdded:(id)arg1;
- (void)aliasStatusChanged:(id)arg1;
- (void)accountActivationStateChanged:(id)arg1;
- (void)authorizationCredentialsChanged:(id)arg1;
- (void)profileValidationStateChanged:(id)arg1;
- (void)profileChanged:(id)arg1;
- (void)callerIdChanged:(id)arg1;
- (void)accountRegistrationChanged:(id)arg1;
- (void)accountRemoved:(id)arg1;
- (void)accountAdded:(id)arg1;
- (BOOL)shouldHandleAccountNotification:(id)arg1;
- (void)stopListeningForAccountChanges;
- (void)startListeningForAccountChanges;
- (BOOL)shouldShowAlertForError:(id)arg1;
- (BOOL)hasFailedLoginDueToBadLogin;
- (BOOL)hasFailedLogin;
- (unsigned int)accountState;
- (unsigned int)accountStateForAccount:(id)arg1;
- (unsigned int)accountState:(id)arg1;
- (BOOL)_accountHasValidatedLocale:(id)arg1;
- (BOOL)_accountIsAuthenticated:(id)arg1;
- (BOOL)_accountIsSignedOut:(id)arg1;
- (id)aliasSummaryString:(char *)arg1;
- (BOOL)unvalidateAlias:(id)arg1;
- (BOOL)validateAlias:(id)arg1;
- (BOOL)setAliases:(id)arg1 onAccount:(id)arg2;
- (BOOL)canRemoveAlias:(id)arg1;
- (BOOL)removeAlias:(id)arg1 fromAccount:(id)arg2;
- (BOOL)addAlias:(id)arg1;
- (BOOL)addAlias:(id)arg1 toAccount:(id)arg2;
- (BOOL)_addAliases:(id)arg1 toAccount:(id)arg2 validate:(BOOL)arg3;
- (id)aliasNamed:(id)arg1;
- (BOOL)hasAlias:(id)arg1;
- (BOOL)hasAliasNamed:(id)arg1;
@property(readonly, nonatomic) NSArray *emailAliases;
@property(readonly, nonatomic) NSArray *useableAliases;
@property(readonly, nonatomic) NSArray *allAvailableAliases;
@property(readonly, nonatomic) NSArray *vettedAliases;
@property(readonly, nonatomic) NSArray *aliases;
- (id)useableAliasesForAccounts:(id)arg1;
- (id)allAvailableAliasesForAccounts:(id)arg1;
- (id)vettedAliasesForAccounts:(id)arg1;
- (id)aliasesForAccounts:(id)arg1;
- (id)_aliasComparator;
- (id)_aliasesPassingTest:(id)arg1;
- (id)_aliasesFromAccounts:(id)arg1 passingTest:(id)arg2;
- (id)_allAvailableAliasesForAccount:(id)arg1;
- (id)_vettedAliasesForAccount:(id)arg1;
- (id)_aliasesForAccount:(id)arg1;
- (BOOL)_shouldFilterOutAlias:(id)arg1 onAccount:(id)arg2;
- (id)localPhoneNumberSentinelAlias;
- (BOOL)_aliasIsDevicePhoneNumber:(id)arg1;
- (id)accountForAlias:(id)arg1;
- (id)_accountForAlias:(id)arg1 accounts:(id)arg2;
- (void)deactivateAccounts;
- (void)activateAccounts;
- (void)activateAccountsExcludingAccounts:(id)arg1;
- (void)clearAllCaches;
- (void)_clearAccountCache;
- (id)loginForAccount:(id)arg1;
- (void)signoutAccount:(id)arg1;
- (void)_signOutAccount:(id)arg1 delete:(BOOL)arg2;
- (id)beginAccountSetupWithAccount:(id)arg1;
- (id)beginAccountSetupWithLogin:(id)arg1 password:(id)arg2 foundExisting:(char *)arg3;
- (id)beginAccountSetupWithLogin:(id)arg1 authID:(id)arg2 authToken:(id)arg3 regionInfo:(id)arg4 foundExisting:(char *)arg5;
- (id)_createAccountWithLogin:(id)arg1 foundExisting:(char *)arg2;
- (BOOL)__ensureSingleAppleIDAccountExistsWithLogin:(id)arg1;
- (id)accountWithLogin:(id)arg1;
- (id)firstAccount;
@property(readonly, nonatomic) NSArray *accounts;
- (void)systemApplicationDidEnterBackground;
- (void)dealloc;
@property(readonly, nonatomic) NSSet *serviceNames; // @dynamic serviceNames;
@property(readonly, nonatomic) IMServiceImpl *firstService; // @dynamic firstService;
- (id)initWithServiceType:(int)arg1;
- (id)init;
- (void)showSetupFaceTimeOverCellularAlertWithCompletion:(id)arg1;
@property(readonly, nonatomic) NSArray *failedAccounts;
- (id)activeAccounts;
@property(readonly, nonatomic) NSArray *appleIDAccounts;
@property(readonly, nonatomic) NSArray *phoneAccounts;
- (id)_predicatesWithFilter:(int)arg1;
- (id)_accountsPassingTests:(id)arg1 message:(id)arg2;
- (id)accountsWithFilter:(int)arg1;
- (id)accountsWithFilter:(int)arg1 message:(id)arg2;
- (void)_clearFilterCache;
- (id)__filter_signedInPredicate;
- (id)__filter_validatedProfilePredicate;
- (id)__filter_signInCompletePredicate;
- (id)__filter_validatedAliasPredicate;
- (id)__filter_failedAccountsPredicate;
- (id)__filter_inactiveAccountsPredicate;
- (id)__filter_activeAccountsPredicate;
- (id)__filter_phoneAccountPredicate;
- (id)__filter_appleIDAccountPredicate;
- (id)guessedDisplayAlias;
- (id)_guessedDisplayAliasFromAccounts:(id)arg1;
- (BOOL)_isValidCallerIDAlias:(id)arg1 forAccount:(id)arg2;
- (id)guessedAlias;
- (id)guessedAccountName;
- (void)stopRequiringWifi;
- (void)startRequiringWifi;
- (void)_stopWiFiAlertWatchTimer;
- (void)_startWiFiAlertWatchTimer;
- (void)_wifiAlertWatchTimerFired:(id)arg1;
- (void)resetNetworkFirstRunAlert;
- (void)showNetworkFirstRunAlert;
- (void)showNetworkAlertIfNecessary;
- (void)showNetworkAlert;
- (void)_showNetworkAlertWithMessage:(id)arg1;
- (id)networkSettingsURLAllowingCellular:(BOOL)arg1;
- (BOOL)deviceCanTakeNetworkAction;
- (BOOL)deviceHasNetworkEnabled;
- (BOOL)deviceHasSaneNetworkConnection;
- (void)openURL:(id)arg1;
- (void)refreshSystemAccount;
@property(readonly, nonatomic) int systemAccountType;
@property(readonly, nonatomic) IMAccount *systemAccount;
- (BOOL)hasSystemAccount;
- (void)__updateSystemAccount;

@end

