/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#import "UIViewController.h"

#import "MFContactsSearchConsumer-Protocol.h"
#import "UIPopoverControllerDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"

@class MFContactsSearchManager, MFContactsSearchResultsModel, MFSearchShadowView, NSArray, NSNumber, PLComposeRecipientView, UIPopoverController, UIScrollView, UITableView;

@interface PLComposeRecipientViewController : UIViewController <MFContactsSearchConsumer, UITableViewDelegate, UITableViewDataSource, UIPopoverControllerDelegate>
{
    PLComposeRecipientView *_recipientView;
    UIScrollView *_recipientContainerView;
    struct CGRect _keyboardFrame;
    unsigned int _maxExpandRows;
    id <PLComposeRecipientViewControllerDelegate> _delegate;
    MFContactsSearchManager *_searchManager;
    MFContactsSearchResultsModel *_searchResultsModel;
    MFSearchShadowView *_shadowView;
    NSArray *_searchResults;
    NSNumber *_currentSearchTaskID;
    UITableView *_searchResultsTable;
    UIPopoverController *_searchResultsPopoverController;
    UIPopoverController *_peoplePickerPopoverController;
    struct {
        unsigned int showingPeoplePicker:1;
        unsigned int showingSearchResultsTable:1;
        unsigned int offsettingForResultsTable:1;
        unsigned int wasFirstResponder:1;
    } _flags;
    BOOL _drawsLetterpress;
}

+ (void)recordRecentEventForAddresses:(id)arg1;
@property(nonatomic) id <PLComposeRecipientViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned int maxExpandRows; // @synthesize maxExpandRows=_maxExpandRows;
@property(nonatomic) BOOL drawsLetterpress; // @synthesize drawsLetterpress=_drawsLetterpress;
@property(readonly, nonatomic) PLComposeRecipientView *recipientView; // @synthesize recipientView=_recipientView;
- (BOOL)isRecipientViewFirstResponder;
- (void)makeRecipientViewResignFirstResponder;
- (void)makeRecipientViewFirstResponder;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)composeRecipientViewReturnPressed:(id)arg1;
- (id)composeRecipientView:(id)arg1 composeRecipientForRecord:(void *)arg2 identifier:(int)arg3;
- (id)composeRecipientView:(id)arg1 composeRecipientForAddress:(id)arg2;
- (void)composeRecipientView:(id)arg1 showPersonCardForAtom:(id)arg2;
- (void)composeRecipientViewDidFinishPickingRecipient:(id)arg1;
- (BOOL)composeRecipientViewIsShowingPeoplePicker:(id)arg1;
- (void)composeRecipientViewRequestAddRecipient:(id)arg1;
- (void)composeRecipientView:(id)arg1 textDidChange:(id)arg2;
- (void)composeRecipientView:(id)arg1 didChangeSize:(struct CGSize)arg2;
- (void)composeRecipientViewDidFinishEnteringRecipient:(id)arg1;
- (void)composeRecipientView:(id)arg1 requestDeleteRecipientAtIndex:(int)arg2;
- (void)endedNetworkActivity;
- (void)beganNetworkActivity;
- (void)finishedTaskWithID:(id)arg1;
- (void)finishedSearchingForType:(int)arg1;
- (void)consumeSearchResults:(id)arg1 type:(int)arg2 taskID:(id)arg3;
- (void)_searchForRecipientWithText:(id)arg1;
- (void)_updateSearchResultsTableVisibility;
- (BOOL)_searchResultsShowInPopover;
- (id)_newShadowView;
- (id)_newSearchResultsTable;
- (void)_setSearchResults:(id)arg1;
- (id)_searchManager;
- (void)_presentSearchResultsPopover;
- (void)_keyboardSizeDidChange:(id)arg1;
- (void)_updateViewsLayoutAnimated:(BOOL)arg1 completion:(id)arg2;
- (void *)_addressBook;
- (void)_forceDismissPeoplePickerPopover;
- (id)recipients;
- (void)didRotateFromInterfaceOrientation:(int)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(int)arg1 duration:(double)arg2;
- (BOOL)shouldAutorotateToInterfaceOrientation:(int)arg1;
- (void)viewDidUnload;
- (void)loadView;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

