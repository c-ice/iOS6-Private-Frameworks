/*
 *     Generated by class-dump 3.3.4 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2011 by Steve Nygard.
 */

#pragma mark Named Structures

struct AnimationReferenceTimer {
    double _field1;
    double _field2;
    double _field3;
};

struct BitField<unsigned int> {
    unsigned int mField;
};

struct CGPoint {
    float _field1;
    float _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    float width;
    float height;
};

struct CameraManager {
    void **_vptr$CameraManager;
    _Bool _panBegin;
    _Bool _panInProgress;
    struct Position3d _panStartPosition;
    struct Vector2i _panPreviousCursor;
    struct Vector2i _panCurrentCursor;
    _Bool _rotateBegin;
    _Bool _rotateInProgress;
    _Bool _rotateEnd;
    struct Position3d _rotateStartPosition;
    struct Vector2i _rotatePreviousCursor;
    struct Vector2i _rotateCurrentCursor;
    double _rotateAngle;
    _Bool _tiltBegin;
    _Bool _tiltInProgress;
    _Bool _tiltEnd;
    _Bool _tiltRubberBandInProgress;
    struct Position3d _tiltStartPosition;
    struct Vector2i _tiltPreviousCursor;
    struct Vector2i _tiltCurrentCursor;
    double _tiltAngle;
    double _tiltRubberBandAngle;
    _Bool _zoomBegin;
    _Bool _zoomInProgress;
    _Bool _zoomEnd;
    _Bool _zoomRubberBandInProgress;
    struct Position3d _zoomStartPosition;
    struct Vector2i _zoomPreviousCursor;
    struct Vector2i _zoomCurrentCursor;
    double _zoomFactor;
    double _zoomRubberBandDistance;
};

struct Context;

struct GeoResourceManager {
    void **_field1;
    struct ReflectionBase *_field2;
    struct BitField<unsigned int> _field3;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    struct Context *_field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    struct KaroMapImp<std::__1::basic_string<char>, karo::Node::InputSlot, std::__1::less<std::__1::basic_string<char>>> _field14;
    struct KaroArrayImp<karo::Node *> _field15;
    struct BitField<unsigned int> _field16;
    struct ToggleMutex _field17;
    struct ManifestManager *_field18;
    struct GeoResourceObserverWrapper *_field19;
};

struct GeoResourceObserverWrapper;

struct GeoServicesLoadJob;

struct GeoServicesLoadJobReference {
    struct GeoServicesLoadJob *_geoServicesLoadJob;
};

struct GlobeView {
    void **_field1;
};

struct GlobeViewImp;

struct InputSlot {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field1;
    struct Rtti *_field2;
    struct Node *_field3;
    struct KaroArrayImp<karo::Node *> _field4;
    _Bool _field5;
    struct BitField<unsigned int> _field6;
};

struct KaroArrayImp<karo::Node *> {
    void **_field1;
    struct ReflectionBase *_field2;
    struct BitField<unsigned int> _field3;
    unsigned int _field4;
    struct vector<karo::Node *, std::__1::allocator<karo::Node *>> _field5;
    unsigned int _field6;
};

struct KaroMapImp<_GEOTileKey, altitude::GeoServicesLoadJobReference, GEOTileKeyComp> {
    void **_vptr$ReflectionInterface;
    struct ReflectionBase *mPartOf;
    struct BitField<unsigned int> mFlags;
    unsigned int mMappingsCount;
    struct _GEOTileKey mDefaultKey;
    struct GeoServicesLoadJobReference mDefaultValue;
    unsigned int mT0Flags;
    unsigned int mT1Flags;
    struct map<_GEOTileKey, altitude::GeoServicesLoadJobReference, GEOTileKeyComp, std::__1::allocator<std::__1::pair<const _GEOTileKey, altitude::GeoServicesLoadJobReference>>> mMap;
};

struct KaroMapImp<std::__1::basic_string<char>, karo::Node::InputSlot, std::__1::less<std::__1::basic_string<char>>> {
    void **_field1;
    struct ReflectionBase *_field2;
    struct BitField<unsigned int> _field3;
    unsigned int _field4;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field5;
    struct InputSlot _field6;
    unsigned int _field7;
    unsigned int _field8;
    struct map<std::__1::basic_string<char>, karo::Node::InputSlot, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, karo::Node::InputSlot>>> _field9;
};

struct ManifestManager;

struct Mutex {
    void *mMutex;
};

struct Node;

struct Position3d {
    double _latitude;
    double _longitude;
    double _height;
};

struct ReflectionBase;

struct Rtti;

struct Scene;

struct Stylesheet;

struct TestComponent;

struct TestManager {
    struct vector<c3::test::TestComponent, std::__1::allocator<c3::test::TestComponent>> _testComponents;
    struct __wrap_iter<c3::test::TestComponent *> {
        struct TestComponent *__i;
    } _activeTest;
    struct vector<bool, std::__1::allocator<bool>> result;
    struct ViewerImp *_viewer;
};

struct ToggleMutex {
    void *_field1;
    _Bool _field2;
};

struct Vector2i {
    int _x;
    int _y;
};

struct Viewer {
    void **_field1;
};

struct ViewerCallback;

struct ViewerImp {
    void **_field1;
    struct GlobeViewImp *_field2;
    int _field3;
    int _field4;
    int _field5;
    double _field6;
    double _field7;
    struct Viewport _field8;
    struct Scene *_field9;
    struct basic_ofstream<char, std::__1::char_traits<char>> _field10;
    _Bool _field11;
    _Bool _field12;
    struct AnimationReferenceTimer _field13;
    _Bool _field14;
    _Bool _field15;
    float _field16;
    float _field17[12];
    float _field18[8];
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field19;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field20;
    _Bool _field21;
    struct queue<c3::Viewer::ViewerMessage, std::__1::deque<c3::Viewer::ViewerMessage, std::__1::allocator<c3::Viewer::ViewerMessage>>> _field22;
    unsigned int _field23;
    struct ViewerCallback *_field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    struct set<c3::ManifestListener *, std::__1::less<c3::ManifestListener *>, std::__1::allocator<c3::ManifestListener *>> _field28;
    struct shared_ptr<altitude::Stylesheet> _field29;
};

struct Viewport {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct _ACoordinate {
    double _field1;
    double _field2;
};

struct _AGeocentric {
    double _field1;
    double _field2;
    double _field3;
};

struct _GEOTileKey {
    unsigned int z:6;
    unsigned int x:26;
    unsigned int y:26;
    unsigned int type:6;
    unsigned int pixelSize:8;
    unsigned int textScale:8;
    unsigned int provider:8;
    unsigned int expires:1;
    unsigned int reserved1:7;
    unsigned char reserved2[4];
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct basic_filebuf<char, std::__1::char_traits<char>> {
    void **_field1;
    struct locale _field2;
    char *_field3;
    char *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    char *_field10;
    char *_field11;
    char _field12[8];
    unsigned int _field13;
    char *_field14;
    unsigned int _field15;
    struct __sFILE *_field16;
    struct codecvt<char, char, __mbstate_t> *_field17;
    union {
        char _field1[128];
        long long _field2;
    } _field18;
    unsigned int _field19;
    unsigned int _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
};

struct basic_ofstream<char, std::__1::char_traits<char>> {
    void **_field1;
    struct basic_filebuf<char, std::__1::char_traits<char>> _field2;
    void **_field3;
    unsigned int _field4;
    int _field5;
    int _field6;
    unsigned int _field7;
    unsigned int _field8;
    void *_field9;
    void *_field10;
    void **_field11;
    int *_field12;
    unsigned int _field13;
    unsigned int _field14;
    long *_field15;
    unsigned int _field16;
    unsigned int _field17;
    void **_field18;
    unsigned int _field19;
    unsigned int _field20;
    struct basic_ostream<char, std::__1::char_traits<char>> *_field21;
    char _field22;
};

struct basic_ostream<char, std::__1::char_traits<char>>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned int _field1;
                    unsigned int _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[11];
                } _field2;
                struct __raw {
                    unsigned long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct codecvt<char, char, __mbstate_t>;

struct deque<c3::Viewer::ViewerMessage, std::__1::allocator<c3::Viewer::ViewerMessage>> {
    struct __split_buffer<c3::Viewer::ViewerMessage *, std::__1::allocator<c3::Viewer::ViewerMessage *>> {
        int **_field1;
        int **_field2;
        int **_field3;
        struct __compressed_pair<c3::Viewer::ViewerMessage **, std::__1::allocator<c3::Viewer::ViewerMessage *>> {
            int **_field1;
        } _field4;
    } _field1;
    unsigned int _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<c3::Viewer::ViewerMessage>> {
        unsigned long _field1;
    } _field3;
};

struct locale {
    struct __imp *_field1;
};

struct map<_GEOTileKey, altitude::GeoServicesLoadJobReference, GEOTileKeyComp, std::__1::allocator<std::__1::pair<const _GEOTileKey, altitude::GeoServicesLoadJobReference>>> {
    struct __tree<std::__1::pair<_GEOTileKey, altitude::GeoServicesLoadJobReference>, std::__1::__map_value_compare<_GEOTileKey, altitude::GeoServicesLoadJobReference, GEOTileKeyComp, true>, std::__1::allocator<std::__1::pair<_GEOTileKey, altitude::GeoServicesLoadJobReference>>> {
        struct __tree_node<std::__1::pair<_GEOTileKey, altitude::GeoServicesLoadJobReference>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<_GEOTileKey, altitude::GeoServicesLoadJobReference>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<_GEOTileKey, altitude::GeoServicesLoadJobReference, GEOTileKeyComp, true>> {
            unsigned long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, karo::Node::InputSlot, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, karo::Node::InputSlot>>> {
    struct __tree<std::__1::pair<std::__1::basic_string<char>, karo::Node::InputSlot>, std::__1::__map_value_compare<std::__1::basic_string<char>, karo::Node::InputSlot, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, karo::Node::InputSlot>>> {
        struct __tree_node<std::__1::pair<std::__1::basic_string<char>, karo::Node::InputSlot>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<std::__1::basic_string<char>, karo::Node::InputSlot>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, karo::Node::InputSlot, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct queue<c3::Viewer::ViewerMessage, std::__1::deque<c3::Viewer::ViewerMessage, std::__1::allocator<c3::Viewer::ViewerMessage>>> {
    struct deque<c3::Viewer::ViewerMessage, std::__1::allocator<c3::Viewer::ViewerMessage>> _field1;
};

struct set<c3::ManifestListener *, std::__1::less<c3::ManifestListener *>, std::__1::allocator<c3::ManifestListener *>> {
    struct __tree<c3::ManifestListener *, std::__1::less<c3::ManifestListener *>, std::__1::allocator<c3::ManifestListener *>> {
        struct __tree_node<c3::ManifestListener *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<c3::ManifestListener *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<c3::ManifestListener *>> {
            unsigned long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<altitude::Stylesheet> {
    struct Stylesheet *_field1;
    struct __shared_weak_count *_field2;
};

struct vector<bool, std::__1::allocator<bool>> {
    unsigned long *__begin_;
    unsigned int __size_;
    struct __compressed_pair<unsigned long, std::__1::allocator<unsigned long>> {
        unsigned long __first_;
    } __cap_alloc_;
};

struct vector<c3::test::TestComponent, std::__1::allocator<c3::test::TestComponent>> {
    struct TestComponent *__begin_;
    struct TestComponent *__end_;
    struct __compressed_pair<c3::test::TestComponent *, std::__1::allocator<c3::test::TestComponent>> {
        struct TestComponent *__first_;
    } __end_cap_;
};

struct vector<karo::Node *, std::__1::allocator<karo::Node *>> {
    struct Node **_field1;
    struct Node **_field2;
    struct __compressed_pair<karo::Node **, std::__1::allocator<karo::Node *>> {
        struct Node **_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    void *opaque1;
    long opaque2;
} CDStruct_632c0709;

